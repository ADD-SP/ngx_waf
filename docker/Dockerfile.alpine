FROM nginx:stable-alpine as builder
ARG CHANGE_SOURCE=false

WORKDIR /usr/local/src
COPY . ./ngx_waf

SHELL ["/bin/sh", "-o", "pipefail", "-c"]
RUN set -xe \
    &&  if [ ${CHANGE_SOURCE} = true ]; then \
            sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories ; \
            fi \
    &&  apk update \
    &&  apk add --no-cache uthash-dev \
            git \
            gcc \
            libc-dev \
            make \
            openssl-dev \
            pcre-dev \
            zlib-dev \
            linux-headers \
            curl \
            gnupg \
            libxslt-dev \
            gd-dev \
            geoip-dev \
            python3 \
            py3-pip \
            libsodium-dev \
            libsodium \
            libmaxminddb \
            libmaxminddb-dev \
    &&  if [ ${CHANGE_SOURCE} = true ]; then \
            pip3 config set global.index-url https://mirrors.cloud.tencent.com/pypi/simple ; \
        fi \
    &&  pip3 install lastversion
RUN set -xe \
    &&  git clone https://github.com/leev/ngx_http_geoip2_module.git \
    &&  (cd ngx_waf && git clone https://github.com/client9/libinjection.git inc/libinjection) \
    &&  (git clone https://github.com/google/ngx_brotli.git && cd ngx_brotli && git submodule update --init) \ 
    # &&  lastversion --download="openssl.tar.gz" --at=github openssl \
    # &&  mkdir openssl && tar -zxf "openssl.tar.gz" -C openssl --strip-components=1 \
    &&  lastversion --download="nginx.tar.gz" --major mainline https://nginx.org \
    &&  mkdir nginx && tar -zxf "nginx.tar.gz" -C nginx --strip-components=1 \
    &&  cd nginx \
    &&  echo "#!/bin/sh" > /env.sh \
    &&  export EXTRA_CFLAGS="$(python3 /usr/local/src/ngx_waf/docker/arguments.py OUTPUT_EXTRA_CFLAGS)" \
    &&  echo "export EXTRA_CFLAGS='${EXTRA_CFLAGS}'" >> /env.sh \
    &&  export EXTRA_LFLAGS="$(python3 /usr/local/src/ngx_waf/docker/arguments.py OUTPUT_EXTRA_LFLAGS)" \
    &&  echo "export EXTRA_LFLAGS='${EXTRA_LFLAGS}'" >> /env.sh \
    &&  ./configure \
        $(python3 /usr/local/src/ngx_waf/docker/arguments.py OUTPUT_ARGUMENTS) \
        --with-debug \
        # --with-openssl=/usr/local/src/openssl \
        --add-module=/usr/local/src/ngx_waf \
        --add-module=/usr/local/src/ngx_http_geoip2_module \
        --add-module=/usr/local/src/ngx_brotli \
    &&  make -j$(nproc) \
    &&  cp objs/nginx /usr/sbin/nginx

FROM nginx:stable-alpine
COPY ./rules /etc/nginx/waf-rules
COPY --from=builder /usr/sbin/nginx /usr/sbin/
COPY --from=builder /env.sh /env.sh
RUN set -xe \
    &&  apk update \
    &&  apk add --no-cache libsodium libsodium-dev libmaxminddb libmaxminddb-dev \
    &&  cat /env.sh \
    &&  source /env.sh \
    &&  rm -rf /env.sh \ 
    &&  echo "${EXTRA_CFLAGS}" \
    &&  echo "${EXTRA_LFLAGS}" \
    &&  nginx -t \
    &&  nginx -V