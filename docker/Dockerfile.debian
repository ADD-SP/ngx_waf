FROM nginx:stable as builder
ARG CHANGE_SOURCE=false

WORKDIR /usr/local/src
COPY . ./ngx_waf

SHELL ["/bin/bash", "-o", "pipefail", "-c"]
RUN set -xe \ 
    &&  if [ ${CHANGE_SOURCE} == true ] ; then \
            cp ./ngx_waf/docker/sources.list /etc/apt/sources.list ; \
            apt-get clean all ; \
        fi \
    &&  apt-get update --yes \
    &&  apt-get install --yes build-essential \
            git \
            wget \
            make \
            gcc \
            zlib1g-dev \ 
            libpcre3 \ 
            libpcre3-dev \ 
            libssl-dev \ 
            libxslt1-dev \ 
            libxml2-dev \ 
            libgeoip-dev \ 
            libgd-dev \ 
            libperl-dev \ 
            uthash-dev \
            python3 \
            python3-pip \
            libsodium23 \
            libsodium-dev \
            libmaxminddb0 \
            libmaxminddb-dev \
    &&  if [ ${CHANGE_SOURCE} == true ] ; then \
            pip3 config set global.index-url https://mirrors.cloud.tencent.com/pypi/simple ; \
        fi \
    &&  pip3 install lastversion
RUN set -xe \
    &&  git clone https://github.com/leev/ngx_http_geoip2_module.git \
    &&  (cd ngx_waf && git clone https://github.com/client9/libinjection.git inc/libinjection) \
    &&  (git clone https://github.com/google/ngx_brotli.git && cd ngx_brotli && git submodule update --init) \ 
    # &&  lastversion --download="openssl.tar.gz" --at=github openssl \
    # &&  mkdir openssl && tar -zxf "openssl.tar.gz" -C openssl --strip-components=1 \
    &&  lastversion --download="nginx.tar.gz" nginx:stable \
    &&  mkdir nginx && tar -zxf "nginx.tar.gz" -C nginx --strip-components=1 \
    &&  cd nginx \
    &&  export EXTRA_CFLAGS="$(python3 /usr/local/src/ngx_waf/docker/arguments.py OUTPUT_EXTRA_CFLAGS)" \
    &&  echo $EXTRA_CFLAGS \
    &&  export EXTRA_LFLAGS="$(python3 /usr/local/src/ngx_waf/docker/arguments.py OUTPUT_EXTRA_LFLAGS)" \
    &&  echo $EXTRA_LFLAGS \
    &&  ./configure \
        $(python3 /usr/local/src/ngx_waf/docker/arguments.py OUTPUT_ARGUMENTS) \
        --with-debug \
        # --with-openssl=/usr/local/src/openssl \
        --add-module=/usr/local/src/ngx_waf \
        --add-module=/usr/local/src/ngx_http_geoip2_module \
        --add-module=/usr/local/src/ngx_brotli \
    &&  make -j$(nproc)\
    &&  cp objs/nginx /usr/sbin/nginx


FROM nginx:stable
COPY ./rules /etc/nginx/waf-rules
COPY --from=builder /usr/sbin/nginx /usr/sbin/
RUN set -xe \
    && apt-get update \
    && apt-get install --yes libsodium23 libsodium-dev libmaxminddb0 libmaxminddb-dev \
    && nginx -t && nginx -V
