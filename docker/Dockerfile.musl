ARG NGX_VER=stable

FROM owasp/modsecurity:3.0.5-alpine AS modsecurity

ARG NGX_VER=stable
FROM nginx:${NGX_VER}-alpine as base
ARG CHANGE_SOURCE=false
ARG NGX_VER=stable
ARG LIB_SODIUM_VER=1.0.18-RELEASE
ARG MODSEC_VERSION=v3.0.5
ARG CJSON_VERSION=v1.7.15
ARG UTHASH_VERSION=v2.3.0

WORKDIR /usr/local/src
COPY . ./ngx_waf
COPY --from=modsecurity /usr/local/modsecurity/ /usr/local/modsecurity/

SHELL ["/bin/sh", "-o", "pipefail", "-c"]
RUN set -xe \
    &&  if [ ${CHANGE_SOURCE} = true ]; then \
            sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories ; \
            fi \
    &&  apk update \
    &&  apk add --no-cache uthash-dev \
            git \
            gcc \
            g++ \
            libc-dev \
            make \
            openssl-dev \
            pcre-dev \
            zlib-dev \
            linux-headers \
            curl \
            gnupg \
            libxslt-dev \
            libcurl \
            curl-dev \
            gd-dev \
            python3 \
            py3-pip \
            libtool \
            autoconf \
            automake \
            libmaxminddb-dev \
            libmaxminddb \
            flex \
            bison \
    &&  if [ ${CHANGE_SOURCE} = true ]; then \
            pip3 config set global.index-url https://mirrors.cloud.tencent.com/pypi/simple ; \
        fi \
    &&  pip3 install lastversion

RUN set -xe \
    &&  git clone https://github.com/DaveGamble/cJSON.git --branch ${CJSON_VERSION}  ngx_waf/lib/cjson

RUN set -xe \
    &&  git clone https://github.com/troydhanson/uthash.git --branch ${UTHASH_VERSION} ngx_waf/lib/uthash

RUN set -xe \
    &&  git clone https://github.com/jedisct1/libsodium.git --branch ${LIB_SODIUM_VER} libsodium \
    &&  cd libsodium \
    &&  ./configure --prefix=/usr/local/libsodium --with-pic \
    &&  make -j$(nproc) \
    &&  make check -j$(nproc) \ 
    &&  make install

RUN set -xe \
    && git clone https://github.com/SpiderLabs/ModSecurity.git --branch ${MODSEC_VERSION} \
    && cp -r ModSecurity/headers /usr/local/modsecurity/include

RUN set -xe \
    &&  lastversion --download="nginx.tar.gz" --major ${NGX_VER} https://nginx.org \
    &&  mkdir nginx \
    &&  tar -zxf "nginx.tar.gz" -C nginx --strip-components=1

RUN set -xe \
    &&  export LIB_SODIUM=/usr/local/libsodium \
    &&  export LIB_MODSECURITY=/usr/local/modsecurity \
    &&  cd nginx \
    &&  ./configure \
        --with-debug \
        --add-dynamic-module=/usr/local/src/ngx_waf \
        --with-compat \
        --with-cc-opt='-fstack-protector-strong' \
    &&  make modules -j$(nproc)


FROM busybox:stable-musl
COPY --from=base /usr/local/src/nginx/objs/ngx_http_waf_module.so /modules/ngx_http_waf_module.so
COPY ./assets /assets